// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuestionCard renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionCard
    currentAnswerStatus=""
    currentQuestionIndex={0}
    displayAnswerResponse={false}
    handleAnswerState={[MockFunction]}
    handleShowNext={[MockFunction]}
    handleShowResult={[MockFunction]}
    next={false}
    question={
      Object {
        "category": "Science: Computers",
        "correct_answer": "8",
        "difficulty": "easy",
        "incorrect_answers": Array [
          "1",
          "2",
          "64",
        ],
        "question": "What amount of bits commonly equals one byte?",
        "type": "multiple",
      }
    }
    questionNumber={1}
    score={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3
          className="score"
        >
          Question
           1 - 
          Score:
           0
        </h3>,
        <div
          className="question"
        >
          What amount of bits commonly equals one byte?
        </div>,
        <div
          className="answers"
        >
          <ul
            className="options"
          >
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="64"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="2"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="8"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="1"
            />
          </ul>
        </div>,
        "======================================================",
        <div
          className="actions"
        />,
      ],
      "className": "question-wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Question",
            " 1 - ",
            "Score:",
            " 0",
          ],
          "className": "score",
        },
        "ref": null,
        "rendered": Array [
          "Question",
          " 1 - ",
          "Score:",
          " 0",
        ],
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "What amount of bits commonly equals one byte?",
          "className": "question",
        },
        "ref": null,
        "rendered": "What amount of bits commonly equals one byte?",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ul
            className="options"
          >
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="64"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="2"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="8"
            />
            <Connect(AnswerOption)
              onAnswerSelected={[Function]}
              option="1"
            />
          </ul>,
          "className": "answers",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="64"
              />,
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="2"
              />,
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="8"
              />,
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="1"
              />,
            ],
            "className": "options",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "64",
              "nodeType": "class",
              "props": Object {
                "onAnswerSelected": [Function],
                "option": "64",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "onAnswerSelected": [Function],
                "option": "2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "8",
              "nodeType": "class",
              "props": Object {
                "onAnswerSelected": [Function],
                "option": "8",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "onAnswerSelected": [Function],
                "option": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "ul",
        },
        "type": "div",
      },
      "======================================================",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "actions",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="score"
          >
            Question
             1 - 
            Score:
             0
          </h3>,
          <div
            className="question"
          >
            What amount of bits commonly equals one byte?
          </div>,
          <div
            className="answers"
          >
            <ul
              className="options"
            >
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="64"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="2"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="8"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="1"
              />
            </ul>
          </div>,
          "======================================================",
          <div
            className="actions"
          />,
        ],
        "className": "question-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Question",
              " 1 - ",
              "Score:",
              " 0",
            ],
            "className": "score",
          },
          "ref": null,
          "rendered": Array [
            "Question",
            " 1 - ",
            "Score:",
            " 0",
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "What amount of bits commonly equals one byte?",
            "className": "question",
          },
          "ref": null,
          "rendered": "What amount of bits commonly equals one byte?",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ul
              className="options"
            >
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="64"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="2"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="8"
              />
              <Connect(AnswerOption)
                onAnswerSelected={[Function]}
                option="1"
              />
            </ul>,
            "className": "answers",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(AnswerOption)
                  onAnswerSelected={[Function]}
                  option="64"
                />,
                <Connect(AnswerOption)
                  onAnswerSelected={[Function]}
                  option="2"
                />,
                <Connect(AnswerOption)
                  onAnswerSelected={[Function]}
                  option="8"
                />,
                <Connect(AnswerOption)
                  onAnswerSelected={[Function]}
                  option="1"
                />,
              ],
              "className": "options",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "64",
                "nodeType": "class",
                "props": Object {
                  "onAnswerSelected": [Function],
                  "option": "64",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "onAnswerSelected": [Function],
                  "option": "2",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "8",
                "nodeType": "class",
                "props": Object {
                  "onAnswerSelected": [Function],
                  "option": "8",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "onAnswerSelected": [Function],
                  "option": "1",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "ul",
          },
          "type": "div",
        },
        "======================================================",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "actions",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
